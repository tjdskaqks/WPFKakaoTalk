<Window x:Class="Views.Windows.ChattingWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        x:Name="xChattingWindow"
        xmlns:local="clr-namespace:Views.Windows"
        xmlns:behaviors="clr-namespace:Common.Behaviors;assembly=Common"
        xmlns:bi="http://schemas.microsoft.com/xaml/behaviors"
        xmlns:controls="clr-namespace:Common.Controls;assembly=Common"
        xmlns:templateSelector="clr-namespace:Views.TemplateSelector"
        xmlns:extension="clr-namespace:Common.MarkupExtension;assembly=Common"
        mc:Ignorable="d"
        MinWidth="350"
        MinHeight="600"
        Tag="{Binding ChattingRoomId}"
        AllowsTransparency="True"
        WindowStyle="None"
        Opacity="{Binding ElementName=xOpacitySlider, Path=Value, Converter={StaticResource DoubleConverter}, ConverterParameter=10}">
    <WindowChrome.WindowChrome>
        <WindowChrome ResizeBorderThickness="5"
                      CaptionHeight="0"
                      CornerRadius="5"
                      GlassFrameThickness="5"/>
    </WindowChrome.WindowChrome>

    <Window.Resources>
        <Style x:Key="sButton_Minimize" TargetType="{x:Type Button}">
            <Setter Property="FocusVisualStyle" Value="{StaticResource ButtonFocusVisual}"/>
            <Setter Property="Background" Value="#FF4E4949"/>
            <Setter Property="BorderBrush" Value="{StaticResource ButtonNormalBorder}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Padding" Value="1"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Grid Background="#00000000">
                            <Border x:Name="icon_shadow" BorderBrush="{x:Null}" BorderThickness="0" Margin="0,6,0,0" Background="Black" Width="12" Height="3" SnapsToDevicePixels="True"/>
                            <Border x:Name="icon" BorderBrush="{x:Null}" BorderThickness="0" Margin="0,9,0,0" Background="#FF4E4949" Width="12" Height="3" SnapsToDevicePixels="True"/>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter Property="Background" TargetName="icon" Value="#FF948A8A"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Foreground" Value="#ADADAD"/>
                                <Setter Property="Background" TargetName="icon" Value="#FF606060"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="sToggleButton_Restore" TargetType="{x:Type ToggleButton}">
            <Setter Property="FocusVisualStyle" Value="{StaticResource ButtonFocusVisual}"/>
            <Setter Property="Background" Value="{StaticResource ButtonNormalBackground}"/>
            <Setter Property="BorderBrush" Value="{StaticResource ButtonNormalBorder}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Padding" Value="1"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ToggleButton}">
                        <Grid Background="#00000000">
                            <Grid x:Name="grid" Margin="0" Visibility="Visible">
                                <Path x:Name="icon_shadow" Data="M1,4.8371952 L1,8.2980001 6,8.2980001 6,4.8371952 z M0,3.5977873 L7,3.5977873 7,9.2980001 0,9.2980001 z M1.9220893,1.3822247 L8.922089,1.3822247 8.922089,7.3594513 7.8387051,7.3594513 7.7970131,2.56259 1.9220893,2.5313401 z" Fill="Black" HorizontalAlignment="Stretch" Height="12" Margin="0,0,1,1" StrokeStartLineCap="Round" Stretch="Fill" StrokeEndLineCap="Round" Stroke="{x:Null}" StrokeThickness="0" VerticalAlignment="Stretch" Width="13" SnapsToDevicePixels="True"/>
                                <Path x:Name="icon" Data="M1,4.8371952 L1,8.2980001 6,8.2980001 6,4.8371952 z M0,3.5977873 L7,3.5977873 7,9.2980001 0,9.2980001 z M1.9220893,1.3822247 L8.922089,1.3822247 8.922089,7.3594513 7.8387051,7.3594513 7.7970131,2.56259 1.9220893,2.5313401 z" Fill="Black" HorizontalAlignment="Stretch" Height="12" Margin="0,1.5,1,0" StrokeStartLineCap="Round" Stretch="Fill" StrokeEndLineCap="Round" Stroke="{x:Null}" StrokeThickness="0" VerticalAlignment="Stretch" Width="13" SnapsToDevicePixels="True"/>
                            </Grid>
                            <Grid x:Name="isChecked" Margin="0" Visibility="Collapsed">
                                <Border x:Name="icon_shadow1" BorderBrush="Black" BorderThickness="2,3,2,2" Margin="0,0,0,1" Width="12" Height="10" SnapsToDevicePixels="True"/>
                                <Border x:Name="icon1" BorderBrush="#FF4E4949" BorderThickness="2,3,2,2" Margin="0,2,0,0" Width="12" Height="10" SnapsToDevicePixels="True"/>
                            </Grid>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsChecked" Value="True">
                                <Setter Property="Visibility" TargetName="isChecked" Value="Visible"/>
                                <Setter Property="Visibility" TargetName="grid" Value="Collapsed"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter Property="Fill" TargetName="icon" Value="#FF948A8A"/>
                            </Trigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="IsChecked" Value="True"/>
                                    <Condition Property="IsPressed" Value="True"/>
                                </MultiTrigger.Conditions>
                                <Setter Property="BorderBrush" TargetName="icon1" Value="#FF948A8A"/>
                            </MultiTrigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Foreground" Value="#ADADAD"/>
                                <Setter Property="Fill" TargetName="icon" Value="#FF606060"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="sButton_Close" BasedOn="{x:Null}" TargetType="{x:Type Button}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Grid Background="#02000000" Width="Auto" Height="Auto" HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
                            <Path Fill="{x:Null}" Stretch="Fill" Stroke="Black" StrokeEndLineCap="Square" StrokeStartLineCap="Square" StrokeThickness="1.5" Data="M0.75,0.75 L7.25,7.25 M7.25,0.75 L0.75,7.25" x:Name="path_shadow" Margin="0,0,0,2" Width="10" Height="10" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" SnapsToDevicePixels="True" />
                            <Path Fill="{x:Null}" Stretch="Fill" StrokeEndLineCap="Square" StrokeStartLineCap="Square" StrokeThickness="1.5" Data="M0.75,0.75 L7.25,7.25 M7.25,0.75 L0.75,7.25" x:Name="path" Width="10" Height="10" VerticalAlignment="Stretch" SnapsToDevicePixels="True" Stroke="#FF4E4949" />
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Stroke" TargetName="path" Value="#FF948A8A"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter Property="Stroke" TargetName="path" Value="#FF948A8A"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Setter Property="SnapsToDevicePixels" Value="True"/>
        </Style>

        <Style x:Key="MessageStyle" TargetType="{x:Type ListBoxItem}">
            <Setter Property="FocusVisualStyle" Value="{x:Null}" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ListBoxItem}">
                        <Grid x:Name="xContentGrid">
                            <ContentPresenter x:Name="PART_ListBoxItem"
                                              HorizontalAlignment="Left"/>
                            <Border x:Name="xSelectionBackBorder"
                                    HorizontalAlignment="Left"
                                    Opacity="0.8"
                                    Width="{Binding ElementName=PART_ListBoxItem, Path=ActualWidth}"/>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <!--<Trigger Property="IsSelected" Value="True">
                                <Setter TargetName="xSelectionBackBorder"
                                        Property="Background"
                                        Value="#FF606264"/>
                            </Trigger>-->
                            
                            <!--상대방 시작 대화(프로필, 이름 표시) 말풍선 Margin 설정-->
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding ChattingSpeechType}" Value="Opponent"/>
                                    <Condition Binding="{Binding ShowProfileImg}" Value="True"/>
                                </MultiDataTrigger.Conditions>
                                <Setter TargetName="PART_ListBoxItem"
                                        Property="Margin"
                                        Value="0, 10, 0, 0"/>
                            </MultiDataTrigger>

                            <!--상대방 시간 연속적 대화 말풍선 Margin 설정-->
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding ChattingSpeechType}" Value="Opponent"/>
                                    <Condition Binding="{Binding ShowProfileImg}" Value="False"/>
                                </MultiDataTrigger.Conditions>
                                <Setter TargetName="PART_ListBoxItem"
                                        Property="Margin"
                                        Value="0, -15, 0, 0"/>
                            </MultiDataTrigger>

                            <!--상대방 마지막 대화 말풍선 Margin 설정-->
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding ChattingSpeechType}" Value="Opponent"/>
                                    <Condition Binding="{Binding ShowOpponentDateTime}" Value="True"/>
                                </MultiDataTrigger.Conditions>
                                <Setter TargetName="PART_ListBoxItem"
                                        Property="Margin"
                                        Value="0, -7, 0, 10"/>
                            </MultiDataTrigger>


                            <!--나의 대화 말풍선 Alignment 설정-->
                            <DataTrigger Binding="{Binding ChattingSpeechType}" Value="Mine">
                                <Setter TargetName="PART_ListBoxItem"
                                        Property="HorizontalAlignment"
                                        Value="Right" />
                            </DataTrigger>

                            <!--나의 시간 연속적 대화 말풍선 Margin 설정-->
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding ChattingSpeechType}" Value="Mine"/>
                                    <Condition Binding="{Binding ShowMineDateTime}" Value="False"/>
                                </MultiDataTrigger.Conditions>
                                <Setter TargetName="PART_ListBoxItem"
                                        Property="Margin"
                                        Value="0, -15, 20, 0"/>
                            </MultiDataTrigger>

                            <!--나의 마지막 대화 말풍선 Margin 설정-->
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding ChattingSpeechType}" Value="Mine"/>
                                    <Condition Binding="{Binding ShowMineDateTime}" Value="True"/>
                                </MultiDataTrigger.Conditions>
                                <Setter TargetName="PART_ListBoxItem"
                                        Property="Margin"
                                        Value="0, -7, 20, 10"/>
                            </MultiDataTrigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!--일반 메세지 타입 말풍선 Style-->
        <DataTemplate x:Key="NormalMsgType">
            <controls:ChattingMessageControl FriendInfoCommand="{Binding ElementName=xChattingWindow, Path=DataContext.ProfileCommand}"/>
        </DataTemplate>
        <!--일반 메세지 타입 말풍선 Style End-->

        <!--사진&이미지 메세지 타입 말풍선 Style-->
        <DataTemplate x:Key="PhotoMsgType">
            <Grid x:Name="gd_RightBubble" Background="SkyBlue" HorizontalAlignment="Right" VerticalAlignment="Stretch">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition/>
                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                    <RowDefinition Height="20"/>
                    <RowDefinition/>
                </Grid.RowDefinitions>
                <TextBlock x:Name="tbk_created_at" VerticalAlignment="Top" HorizontalAlignment="Right" Text="{Binding created_at}" TextWrapping="Wrap" TextTrimming="WordEllipsis" Grid.Row="0" />
                <Grid HorizontalAlignment="Right" VerticalAlignment="Stretch" Grid.Row="1" Grid.RowSpan="2"
                                  Width="Auto" MinWidth="10">
                    <Image x:Name="img_msg"
                           Width="200"
                           Height="200"
                           Cursor="Hand"
                           Source="{Binding ImageMessageUri}" />
                </Grid>

            </Grid>
        </DataTemplate>
        <!--사진&이미지 메세지 타입 말풍선 Style End-->

        <templateSelector:ChatTypeStyleSelector x:Key="xChatTypeStyleSelector"
                                                NomalTemplate="{StaticResource NormalMsgType}"
                                                PhotoTemplate="{StaticResource PhotoMsgType}"/>
    </Window.Resources>

    <Grid x:Name="xMainGrid">
        <Grid.RowDefinitions>
            <RowDefinition Height="100"/>
            <RowDefinition Height="*"/>
        </Grid.RowDefinitions>

        <!--상단 타이틀바-->
        <Grid x:Name="xTitleGrid"
              Grid.Row="0"
              Background="#FFEA9AB3"
              MouseLeftButtonDown="TitleGrid_MouseLeftButtonDown"
              MouseMove="TitleGrid_MouseMove">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="Auto"/>
            </Grid.ColumnDefinitions>

            <Grid Grid.Column="0"
                  VerticalAlignment="Top"
                  Width="45"
                  Height="45"
                  Margin="20, 20, 0, 0">
                <Button Grid.Column="0"
                        Width="45"
                        Height="45"
                        Cursor="Hand"
                        Command="{Binding ProfileCommand}">
                    <Button.Style>
                        <Style TargetType="Button">
                            <Setter Property="OverridesDefaultStyle" Value="True" />
                            <Setter Property="Template">
                                <Setter.Value>
                                    <ControlTemplate TargetType="Button">
                                        <Border Name="border" Background="{TemplateBinding Background}">
                                            <ContentPresenter HorizontalAlignment="Center"
                                                              VerticalAlignment="Center" />
                                        </Border>
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                        </Style>
                    </Button.Style>
                    <Border Margin="0,0,0,0">
                        <Ellipse Width="45"
                                 Height="45"
                                 StrokeThickness="0"
                                 Margin="0,0,0,0">
                            <Ellipse.Fill>
                                <ImageBrush ImageSource="{Binding ProfileImg, Converter={StaticResource Base64ToBitmapImageConverter}}" />
                            </Ellipse.Fill>
                        </Ellipse>
                    </Border>
                </Button>
            </Grid>

            <TextBlock Grid.Column="1"
                       Text="{Binding Title}"
                       VerticalAlignment="Top"
                       FontSize="13"
                       Margin="10, 25, 0, 0"
                       Style="{StaticResource xNanumSquare_BFont}"/>

            <StackPanel x:Name="xTitleStackPnl"
                        VerticalAlignment="Top"
                        Grid.Column="2"
                        HorizontalAlignment="Right"
                        Orientation="Horizontal"
                        Margin="0, 10, 10, 0">
                <Button x:Name="xMinimizeToggleButton"
                        IsTabStop="False"
                        Width="15"
                        Height="15"
                        HorizontalAlignment="Center"
                        VerticalAlignment="Center"
                        Margin="0, 0, 5, 0"
                        Click="MinimizeToggleButton_Click"
                        Style="{DynamicResource sButton_Minimize}"/>
                <ToggleButton x:Name="xMaximizeToggleButton"
                              IsTabStop="False"
                              Width="15"
                              Height="15"
                              HorizontalAlignment="Center"
                              VerticalAlignment="Center"
                              IsChecked="{Binding ElementName=xChattingWindow, Path=WindowState, Converter={StaticResource EnumToBooleanConverter}, ConverterParameter=Normal}"
                              Margin="0,0,5,0"
                              Click="MaximizeToggleButton_Click"
                              Style="{DynamicResource sToggleButton_Restore}"/>
                <Button x:Name="xCloseButton"
                        IsTabStop="False"
                        Width="15"
                        Height="15"
                        HorizontalAlignment="Right"
                        VerticalAlignment="Top"
                        Click="CloseButton_Click"
                        Margin="0, 0, 5, 0"
                        Style="{DynamicResource sButton_Close}"/>
            </StackPanel>
        </Grid>
        <!--상단 타이틀바 END-->

        <Grid Grid.Row="1"
              Background="#FFF7A2BD">
            <Grid.RowDefinitions>
                <RowDefinition Height="*"/>
                <RowDefinition Height="Auto"/>
            </Grid.RowDefinitions>
            <controls:ChattingMessageListControl x:Name="xChatListBox"
                                                 ItemsSource="{Binding ChattingMessageList}"
                                                 behaviors:ListBoxScrollIntoViewBehavior.ScrollIntoTarget="{Binding SelectedChattingMessageItem}"
                                                 ScrollIntoBottomCommand="{Binding ScrollIntoBottomCommand}"
                                                 RequestGetDataCommand="{Binding RequestGetDataCommand}"
                                                 Background="Transparent"
                                                 ItemContainerStyle="{StaticResource MessageStyle}"
                                                 SelectionMode="Multiple"
                                                 extension:ChatMessageBoxSelector.Enabled="True"
                                                 extension:ChatMessageBoxSelector.IsSelectionRectVisible="False"
                                                 BorderThickness="0,0,0,0">
                <bi:Interaction.Behaviors>
                    <behaviors:ListBoxSelectionBehavior SelectedItems="{Binding SelectedChattingMessageList, Mode=TwoWay}"/>
                </bi:Interaction.Behaviors>
                <bi:Interaction.Triggers>
                    <bi:EventTrigger EventName="Loaded">
                        <bi:InvokeCommandAction Command="{Binding LoadedCommand}" />
                    </bi:EventTrigger>
                </bi:Interaction.Triggers>

                <controls:ChattingMessageListControl.ItemTemplate>
                    <DataTemplate>
                        <ContentControl Content="{Binding}"
                                        ContentTemplateSelector="{StaticResource xChatTypeStyleSelector}"/>
                    </DataTemplate>
                </controls:ChattingMessageListControl.ItemTemplate>
            </controls:ChattingMessageListControl>

            <Grid x:Name="xChatMsgGrid"
                  Grid.Row="1"
                  Background="#FFFFFFFF">
                <Grid.RowDefinitions>
                    <RowDefinition Height="*"/>
                    <RowDefinition Height="Auto"/>
                </Grid.RowDefinitions>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="Auto"/>
                </Grid.ColumnDefinitions>

                <TextBox x:Name="xChatMsgTextBox"
                         Grid.Row="0"
                         Grid.Column="0"
                         Tag="265"
                         AcceptsReturn="True"
                         AcceptsTab="False"
                         TextWrapping="Wrap"
                         Text="{Binding ChatMessage, UpdateSourceTrigger=PropertyChanged}"
                         behaviors:TextBoxBehavior.AcceptsEnter="True"
                         behaviors:TextBoxBehavior.AcceptsEnterCommand="{Binding ChatMsgSendCommand}"
                         ScrollViewer.VerticalScrollBarVisibility="Auto"
                         ScrollViewer.HorizontalScrollBarVisibility="Hidden"
                         Margin="10, 10, 0, 0"
                         Style="{StaticResource sPlatTextBox}">
                    <TextBox.Height>
                        <MultiBinding Converter="{StaticResource TextBoxHeightConverter}"
                                      ConverterParameter="70">
                            <Binding ElementName="xChatMsgTextBox" Path="Text" UpdateSourceTrigger="PropertyChanged" />
                            <Binding Source="{StaticResource int4}" />
                            <Binding ElementName="xChatMsgTextBox" Path="Tag" />
                        </MultiBinding>
                    </TextBox.Height>
                </TextBox>
                <Button x:Name="xChatSendBtn"
                        Grid.Row="0"
                        Grid.Column="1"
                        Content="전송"
                        VerticalAlignment="Top"
                        Width="50"
                        Command="{Binding ChatMsgSendCommand}"
                        Height="30"
                        Margin="0, 10, 10, 0"
                        Style="{StaticResource sYellowBorderButtonStyle}"/>

                <StackPanel Grid.Row="1"
                            Grid.Column="0"
                            Orientation="Horizontal"
                            Margin="10, 0, 10, 10">
                    <controls:IconButton IconImage="/Views;component/Images/attachments_ico.png"/>
                </StackPanel>

                <Slider x:Name="xOpacitySlider"
                        Grid.Row="1"
                        Grid.Column="1"
                        HorizontalAlignment="Right"
                        Value="100"
                        Width="50"
                        Margin="0, 0, 10, 10"
                        Style="{StaticResource sRepeatSlider}"/>
            </Grid>
        </Grid>
    </Grid>
</Window>
